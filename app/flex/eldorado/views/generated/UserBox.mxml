<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" label="User"
  xmlns:rx="org.restfulx.components.rx.*">
  <mx:Script><![CDATA[
    import org.restfulx.Rx;
    import org.restfulx.utils.RxUtils;
    import eldorado.models.User;

    [Bindable]
    private var user:User = new User();

    private function newUser():void {
      user = new User();
      usersList.selectedIndex = -1;
    }

    private function saveUser():void {
      updateModelProperties();
      if (user.id) {
        user.update({onSuccess: onUserUpdate});
      } else {
        user.create({onSuccess: onUserCreate});
      }
    }
  
    private function updateModelProperties():void {
      user.login = loginTextInput.text;
      user.email = emailTextInput.text;
      user.passwordHash = passwordHashTextInput.text;
      user.admin = adminCheckBox.selected;
      user.postsCount = int(postsCountTextInput.text);
      user.signature = signatureTextInput.text;
      user.bio = bioTextArea.text;
      user.onlineAt = onlineAtDateTimeTextInput.date;
      user.avatar = avatarTextInput.text;
      user.authToken = authTokenTextInput.text;
      user.authTokenExp = authTokenExpDateTimeTextInput.date;
      user.timeZone = timeZoneTextInput.text;
      user.banMessage = banMessageTextInput.text;
      user.bannedUntil = bannedUntilDateTimeTextInput.date;
      user.chattingAt = chattingAtDateTimeTextInput.date;
      user.loggedOut = loggedOutCheckBox.selected;
      user.articlesCount = int(articlesCountTextInput.text);
      user.allViewedAt = allViewedAtDateTimeTextInput.date;
  
    }
   
    private function destroyUser():void {
      user.destroy({onSuccess: onUserDestroy});
    }
    
    private function onUserSelect():void {
      user = RxUtils.clone(usersList.selectedItem) as User;
    }
    
    private function onUserCreate(result:User):void {
      user = new User;
    }
    
    private function onUserUpdate(result:User):void {
      usersList.selectedItem = result;
      onUserSelect();
    }
    
    private function onUserDestroy(result:User):void {
      onUserCreate(result);
    }    
  ]]></mx:Script>
  <mx:Panel id="usersPanel"
    title="Users" cornerRadius="0" dropShadowEnabled="false" borderStyle="solid"
    borderThickness="1" backgroundColor="#EEEEEE" width="25%" height="100%">
    <mx:List id="usersList"
      width="100%" height="100%"
      dataProvider="{Rx.models.index(User)}"
      change="onUserSelect()"/>
    <mx:ControlBar width="100%">
      <mx:Button label="New User" width="100%" height="30"
        click="newUser()"/>
    </mx:ControlBar>
  </mx:Panel>
  <mx:Panel title="Edit User" cornerRadius="0" dropShadowEnabled="false" borderStyle="solid"
    borderThickness="1" backgroundColor="#EEEEEE" width="75%" height="100%">
    <mx:Form width="100%" height="100%">
      <mx:FormItem label="Login" width="100%">
        <mx:TextInput id="loginTextInput" width="100%" text="{user.login}"/>
      </mx:FormItem>
      <mx:FormItem label="Email" width="100%">
        <mx:TextInput id="emailTextInput" width="100%" text="{user.email}"/>
      </mx:FormItem>
      <mx:FormItem label="PasswordHash" width="100%">
        <mx:TextInput id="passwordHashTextInput" width="100%" text="{user.passwordHash}"/>
      </mx:FormItem>
      <mx:FormItem label="Admin" width="100%">
        <mx:CheckBox id="adminCheckBox" selected="{user.admin}"/>
      </mx:FormItem>
      <mx:FormItem label="PostsCount" width="100%">
        <mx:TextInput id="postsCountTextInput" width="100%" text="{user.postsCount}"/>
      </mx:FormItem>
      <mx:FormItem label="Signature" width="100%">
        <mx:TextInput id="signatureTextInput" width="100%" text="{user.signature}"/>
      </mx:FormItem>
      <mx:FormItem label="Bio" width="100%">
        <mx:TextArea id="bioTextArea" width="100%" height="200" text="{user.bio}"/>
      </mx:FormItem>
      <mx:FormItem label="OnlineAt" width="100%">
        <rx:DateTimeTextInput id="onlineAtDateTimeTextInput" width="200" date="{user.onlineAt}"/>
      </mx:FormItem>
      <mx:FormItem label="Avatar" width="100%">
        <mx:TextInput id="avatarTextInput" width="100%" text="{user.avatar}"/>
      </mx:FormItem>
      <mx:FormItem label="AuthToken" width="100%">
        <mx:TextInput id="authTokenTextInput" width="100%" text="{user.authToken}"/>
      </mx:FormItem>
      <mx:FormItem label="AuthTokenExp" width="100%">
        <rx:DateTimeTextInput id="authTokenExpDateTimeTextInput" width="200" date="{user.authTokenExp}"/>
      </mx:FormItem>
      <mx:FormItem label="TimeZone" width="100%">
        <mx:TextInput id="timeZoneTextInput" width="100%" text="{user.timeZone}"/>
      </mx:FormItem>
      <mx:FormItem label="BanMessage" width="100%">
        <mx:TextInput id="banMessageTextInput" width="100%" text="{user.banMessage}"/>
      </mx:FormItem>
      <mx:FormItem label="BannedUntil" width="100%">
        <rx:DateTimeTextInput id="bannedUntilDateTimeTextInput" width="200" date="{user.bannedUntil}"/>
      </mx:FormItem>
      <mx:FormItem label="ChattingAt" width="100%">
        <rx:DateTimeTextInput id="chattingAtDateTimeTextInput" width="200" date="{user.chattingAt}"/>
      </mx:FormItem>
      <mx:FormItem label="LoggedOut" width="100%">
        <mx:CheckBox id="loggedOutCheckBox" selected="{user.loggedOut}"/>
      </mx:FormItem>
      <mx:FormItem label="ArticlesCount" width="100%">
        <mx:TextInput id="articlesCountTextInput" width="100%" text="{user.articlesCount}"/>
      </mx:FormItem>
      <mx:FormItem label="AllViewedAt" width="100%">
        <rx:DateTimeTextInput id="allViewedAtDateTimeTextInput" width="200" date="{user.allViewedAt}"/>
      </mx:FormItem>
    </mx:Form>
    <mx:ControlBar width="100%">
      <mx:Button label="Save User" width="50%" height="30"
        click="saveUser()"/>
      <mx:Button label="Delete User" width="50%" height="30"
        enabled="{RxUtils.canDeleteModel(user)}"
        click="destroyUser()"/>
    </mx:ControlBar>
  </mx:Panel>
</mx:HBox>